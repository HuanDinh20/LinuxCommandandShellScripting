Welcome to Customizing View of File Content. In this video, you will learn how to apply
commands that operate on files to: Create a line-by-line sorted view. Create a view with repeated lines excluded. Extract lines containing a specified
pattern. Extract slices and fields from each line. And, merge lines from multiple files. The “sort” command sorts the lines of
a file alpha-numerically and prints the sorted result to standard output. By entering "sort pets dot text", You get back the alphabetically sorted output,
with "cat" repeated five times and "dog" repeated twice. If you enter "sort minus R pets dot text",
you get back the lines sorted in the reverse order, with the "dog" lines appearing before
the "cat" lines. If you have repeated lines in your file, you
can use the "unique" command to filter out the repeated lines. Recall the contents of pets.txt by entering
"cat pets dot text", by entering "unique pets dot txt", you get back "cat”, “dog”, and “cat". Notice that the  ” unique” command
only removes duplicated lines if they are consecutive. Thus, the word “cat” appears twice because
in your file, ”cat” appears before and after the two “dog” lines, which breaks
the “cat” sequence. The “grep” command – which stands for
“global regular expression print” returns lines of a file matching a specified pattern
– such as a regular expression. Suppose you have a list of famous people's
names stored in a file, which you view by entering "cat people dot text". You can use grep to find all lines in “people
dot txt” that contain the consecutive characters “c” and “h”. To do this you give grep the matching term,
“c h”, followed by the filename. The output returned two results, Dennis Ritchie
and Erwin Schrodinger, both containing a lower-case match to “c h”. Performing the same operation, but this time
with the – i option returns an extra result, Charles Babbage, which has an upper case C. This is because the -i option expands the
pattern search by making it case-insensitive. You can use the “cut” command to extract
specific sections from each line in your file. Here you see the list of famous names again,
such as Alan Turing and Charles Babbage. You can use the cut command to extract characters
2 to 9 from every line by entering ”cut minus C   2 dash 9  people dot text” You can see from the output that, for example,
“Alan Turing” is returned as ”lan Turi” or L-A-N T-U-R-I. Let’s look at perhaps a more useful example
for this sort of text file. Suppose you want to extract just the last
names of each person in your list. You know that each line of your list is made
up of two fields: one is the first name and the other is the
second name. These fields are separated by a space. Here, you’re cutting to extract the second
field from each line, using the "minus f two" option, and you specify that the field delimiter
is a space using the "minus d quote space quote” option. The result shows that you get back the last
name of each person from the list, just as you wanted. You can use the “paste” command to merge
lines from multiple files. Imagine you are given the following three
text files, all with the same number of lines: a text file called “first dot text” containing
a list of people’s first names; a complementary text file called ”last dot
text” which contains the last names of the same people, and a third text file, called “Y O B dot
test” which lists each person's year of birth. You can view these files as a table by entering
“paste first.txt last.txt yob.txt” Notice the three columns are nicely aligned. This is because paste uses a "tab" as the
default delimiter. And, for example, you can see that Charles
Babbage was born in 1791. You can specify a delimiter other than the
"tab" with the “paste” command, using the "minus D" option. For example, you can use a comma as a delimiter
by entering “paste dash D" with a comma surrounded by double quotes, together with
the "first", "last", and "Y O B" text files. And you get the desired result, where you
can see for example, "Dennis comma Ritchie comma 1941". In this video you learned how to: Use grep to get the lines of a file matching
your desired criteria, Create various views from file contents using
the “sort”, “unique”, “cut”, and “paste” commands.