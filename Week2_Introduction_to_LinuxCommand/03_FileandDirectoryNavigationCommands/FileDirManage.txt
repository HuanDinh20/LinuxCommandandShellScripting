Welcome to File and Directory Management Commands. In this video you will learn how to: Create and delete files and directories, Copy and move files and directories. And, change a file’s permissions to make
it executable. The “make dir” command is used to create
directories. Let’s say you are currently in your documents
folder, which is currently empty. To create a folder called “test”, you
simply enter “make dir test“. Now your current directory has a subfolder
called “test”. The “r m” command allows you to remove
a file or directory. Suppose you have a file structure as shown
on the left. And, let’s say you are in the documents
folder, and you wish to remove “file1”. You can do this by simply typing “rm file1”. Now you can see only “folder1” is left. You cannot simply remove “folder1” since
it may contain other files. However, you can easily get around this by
entering “rm” with the “minus R” option. The “ minus R” option means you want to
remove the directory along with all its child file objects. Your Documents folder is now empty. Accordingly,
you should always be careful when using “rm” with the “-r” (dash R) option. It is very
easy to accidentally remove folders of important data. Now suppose you create an empty directory
with the “mkdir” command, and would like to remove it. It is not recommended to use
“rm –rf”. Instead you should use the “rmdir” command
which is used solely to remove empty directories. This guarantees that you’ll never accidentally
delete any important files or directories. Entering "L S” shows the current directory
is indeed empty. The “touch” command can be used to create
empty files. Suppose you are in your Documents folder,
which is empty, and you wish to create some empty text files. You can do this by entering “touch” along
with some filenames: “a”, “b”, “c”, and “d” with the “dot text“ suffix Now, you can see that your Documents folder
contains the four files you created. You might be wondering what the “touch”
command does to a file that already exists. Suppose your current directory contains a
file called “notes dot text". You can see when it was last modified using
'date minus r notes dot text’. If you use the touch command on “notes dot
text”, you can see that its last-modified date updated to the current time. The “c p” command allows you to copy a
file or directory. To copy files, you can either: copy a file from a source directory and specify
any filename for the copied file in its destination directory, or simply omit the destination filename and default
to keeping the same file name. To copy entire directories, you need to give “c p” the ”minus R”
option so that it knows to recursively copy all subdirectories and files. Let’s look at some examples: Suppose you have a file called “notes dot
text” and a folder called “Documents” in your working directory. You can copy “notes dot text” to your
“Documents” folder using “c p notes dot text Documents”. Now you can see that your Documents folder
contains a copy of notes.txt. Notice that you didn’t need to specify a
source directory, because “c p” defaults to your current directory. Next, you can create a copy of your Documents
folder, called “Docs underscore copy”, using the syntax from the left. And as expected, you now have a “Docs underscore
copy ” folder containing the same contents as our Documents folder. The ”m v” command allows you to move a
file or directory. To move files, you can enter “mv” followed by the paths of the
files you want to move, followed by the folder you want to move them to. Likewise, to move directories, you type “m v” “paths of directories
to move”, followed by the directory you want to move them to. Let’s look at an example: Suppose you have a file called “my script
dot s h” and three folders, called “Scripts”, ”Notes”, and “Documents”. You can move “my_script dot s h” to your
“Scripts” folder using the syntax from the left. Accordingly, entering “L S my_script.sh”
returns nothing, but indeed, entering “L S Scripts” shows that you successfully moved “my_script.sh”
to your Scripts folder. Next, you can move your Notes and Scripts
folders to your Documents folder using the syntax from the left. Perfect, you can see that your directory now
just contains your Documents folder and that your Documents folder contains the Scripts
and Notes folders that you just moved. “C H mod” stands for “change mode”
and is used to change read, write and execute permissions on files. Suppose here you have created a shell script
file in your current directory called “my_script.sh” that echoes “Learning Linux is fun!“ Entering “L S minus L my_script.sh” shows that your shell script has read and
write permissions, as indicated by the “r” and “w” characters. But if you try to execute the file, you get a “permission denied” error. In order to make your script executable, you
call “C H mod” on “my_script.sh” with the “plus x” option. Entering “L S minus L my_script.sh” now shows that “my_script.sh” has executable
permissions, as indicated by the “x” character. Great! Running the script now works. In this video you learned that: You can use the “touch” command to create
a new file or update the “last-modified date” of an existing file. You can create a directory with the “m k
dir” command, and delete and empty directory with the “r m dir” command You can use the “c p” and “m v” commands
to copy, move, and rename files and directories You can use “c h mod” to change read,
write and execute permissions on files.